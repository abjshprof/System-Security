
rec_sum:     file format elf32-i386
rec_sum
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080483a0

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x00000768 memsz 0x00000768 flags r-x
    LOAD off    0x00000f08 vaddr 0x08049f08 paddr 0x08049f08 align 2**12
         filesz 0x00000120 memsz 0x00000124 flags rw-
 DYNAMIC off    0x00000f14 vaddr 0x08049f14 paddr 0x08049f14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00000644 vaddr 0x08048644 paddr 0x08048644 align 2**2
         filesz 0x00000034 memsz 0x00000034 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00000f08 vaddr 0x08049f08 paddr 0x08049f08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048308
  FINI                 0x080485e4
  INIT_ARRAY           0x08049f08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x08049f0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804824c
  SYMTAB               0x080481cc
  STRSZ                0x0000005b
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804a000
  PLTRELSZ             0x00000028
  PLTREL               0x00000011
  JMPREL               0x080482e0
  REL                  0x080482d8
  RELSZ                0x00000008
  RELENT               0x00000008
  VERNEED              0x080482b8
  VERNEEDNUM           0x00000001
  VERSYM               0x080482a8

Version References:
  required from libc.so.6:
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000080  080481cc  080481cc  000001cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000005b  0804824c  0804824c  0000024c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000010  080482a8  080482a8  000002a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  080482b8  080482b8  000002b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000008  080482d8  080482d8  000002d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000028  080482e0  080482e0  000002e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048308  08048308  00000308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000060  08048330  08048330  00000330  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  08048390  08048390  00000390  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000242  080483a0  080483a0  000003a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  080485e4  080485e4  000005e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       0000004a  080485f8  080485f8  000005f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000034  08048644  08048644  00000644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000000f0  08048678  08048678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  08049f08  08049f08  00000f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  08049f0c  08049f0c  00000f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  08049f10  08049f10  00000f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  08049f14  08049f14  00000f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  08049ffc  08049ffc  00000ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000020  0804a000  0804a000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000008  0804a020  0804a020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000004  0804a028  0804a028  00001028  2**0
                  ALLOC
 26 .comment      00000034  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481cc l    d  .dynsym	00000000              .dynsym
0804824c l    d  .dynstr	00000000              .dynstr
080482a8 l    d  .gnu.version	00000000              .gnu.version
080482b8 l    d  .gnu.version_r	00000000              .gnu.version_r
080482d8 l    d  .rel.dyn	00000000              .rel.dyn
080482e0 l    d  .rel.plt	00000000              .rel.plt
08048308 l    d  .init	00000000              .init
08048330 l    d  .plt	00000000              .plt
08048390 l    d  .plt.got	00000000              .plt.got
080483a0 l    d  .text	00000000              .text
080485e4 l    d  .fini	00000000              .fini
080485f8 l    d  .rodata	00000000              .rodata
08048644 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
08048678 l    d  .eh_frame	00000000              .eh_frame
08049f08 l    d  .init_array	00000000              .init_array
08049f0c l    d  .fini_array	00000000              .fini_array
08049f10 l    d  .jcr	00000000              .jcr
08049f14 l    d  .dynamic	00000000              .dynamic
08049ffc l    d  .got	00000000              .got
0804a000 l    d  .got.plt	00000000              .got.plt
0804a020 l    d  .data	00000000              .data
0804a028 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    df *ABS*	00000000              crtstuff.c
08049f10 l     O .jcr	00000000              __JCR_LIST__
080483e0 l     F .text	00000000              deregister_tm_clones
08048410 l     F .text	00000000              register_tm_clones
08048450 l     F .text	00000000              __do_global_dtors_aux
0804a028 l     O .bss	00000001              completed.7209
08049f0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048470 l     F .text	00000000              frame_dummy
08049f08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              rec_sum.c
00000000 l    df *ABS*	00000000              crtstuff.c
08048764 l     O .eh_frame	00000000              __FRAME_END__
08049f10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
08049f0c l       .init_array	00000000              __init_array_end
08049f14 l     O .dynamic	00000000              _DYNAMIC
08049f08 l       .init_array	00000000              __init_array_start
08048644 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804a000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
080485e0 g     F .text	00000002              __libc_csu_fini
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080483d0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804a020  w      .data	00000000              data_start
00000000       F *UND*	00000000              printf@@GLIBC_2.0
0804a028 g       .data	00000000              _edata
080485e4 g     F .fini	00000000              _fini
0804a020 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804a024 g     O .data	00000000              .hidden __dso_handle
0804849b g     F .text	00000055              sum
080485fc g     O .rodata	00000004              _IO_stdin_used
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
08048580 g     F .text	0000005d              __libc_csu_init
0804a02c g       .bss	00000000              _end
080483a0 g     F .text	00000000              _start
080485f8 g     O .rodata	00000004              _fp_hw
0804a028 g       .bss	00000000              __bss_start
080484f0 g     F .text	00000083              main
00000000  w      *UND*	00000000              _Jv_RegisterClasses
00000000       F *UND*	00000000              atoi@@GLIBC_2.0
0804a028 g     O .data	00000000              .hidden __TMC_END__
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
08048308 g     F .init	00000000              _init



Disassembly of section .init:

08048308 <_init>:
 8048308:	53                   	push   %ebx
 8048309:	83 ec 08             	sub    $0x8,%esp
 804830c:	e8 bf 00 00 00       	call   80483d0 <__x86.get_pc_thunk.bx>
 8048311:	81 c3 ef 1c 00 00    	add    $0x1cef,%ebx
 8048317:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804831d:	85 c0                	test   %eax,%eax
 804831f:	74 05                	je     8048326 <_init+0x1e>
 8048321:	e8 6a 00 00 00       	call   8048390 <atoi@plt+0x10>
 8048326:	83 c4 08             	add    $0x8,%esp
 8048329:	5b                   	pop    %ebx
 804832a:	c3                   	ret    

Disassembly of section .plt:

08048330 <printf@plt-0x10>:
 8048330:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048336:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804833c:	00 00                	add    %al,(%eax)
	...

08048340 <printf@plt>:
 8048340:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048346:	68 00 00 00 00       	push   $0x0
 804834b:	e9 e0 ff ff ff       	jmp    8048330 <_init+0x28>

08048350 <puts@plt>:
 8048350:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048356:	68 08 00 00 00       	push   $0x8
 804835b:	e9 d0 ff ff ff       	jmp    8048330 <_init+0x28>

08048360 <exit@plt>:
 8048360:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048366:	68 10 00 00 00       	push   $0x10
 804836b:	e9 c0 ff ff ff       	jmp    8048330 <_init+0x28>

08048370 <__libc_start_main@plt>:
 8048370:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048376:	68 18 00 00 00       	push   $0x18
 804837b:	e9 b0 ff ff ff       	jmp    8048330 <_init+0x28>

08048380 <atoi@plt>:
 8048380:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048386:	68 20 00 00 00       	push   $0x20
 804838b:	e9 a0 ff ff ff       	jmp    8048330 <_init+0x28>

Disassembly of section .plt.got:

08048390 <.plt.got>:
 8048390:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048396:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080483a0 <_start>:
 80483a0:	31 ed                	xor    %ebp,%ebp
 80483a2:	5e                   	pop    %esi
 80483a3:	89 e1                	mov    %esp,%ecx
 80483a5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483a8:	50                   	push   %eax
 80483a9:	54                   	push   %esp
 80483aa:	52                   	push   %edx
 80483ab:	68 e0 85 04 08       	push   $0x80485e0
 80483b0:	68 80 85 04 08       	push   $0x8048580
 80483b5:	51                   	push   %ecx
 80483b6:	56                   	push   %esi
 80483b7:	68 f0 84 04 08       	push   $0x80484f0
 80483bc:	e8 af ff ff ff       	call   8048370 <__libc_start_main@plt>
 80483c1:	f4                   	hlt    
 80483c2:	66 90                	xchg   %ax,%ax
 80483c4:	66 90                	xchg   %ax,%ax
 80483c6:	66 90                	xchg   %ax,%ax
 80483c8:	66 90                	xchg   %ax,%ax
 80483ca:	66 90                	xchg   %ax,%ax
 80483cc:	66 90                	xchg   %ax,%ax
 80483ce:	66 90                	xchg   %ax,%ax

080483d0 <__x86.get_pc_thunk.bx>:
 80483d0:	8b 1c 24             	mov    (%esp),%ebx
 80483d3:	c3                   	ret    
 80483d4:	66 90                	xchg   %ax,%ax
 80483d6:	66 90                	xchg   %ax,%ax
 80483d8:	66 90                	xchg   %ax,%ax
 80483da:	66 90                	xchg   %ax,%ax
 80483dc:	66 90                	xchg   %ax,%ax
 80483de:	66 90                	xchg   %ax,%ax

080483e0 <deregister_tm_clones>:
 80483e0:	b8 2b a0 04 08       	mov    $0x804a02b,%eax
 80483e5:	2d 28 a0 04 08       	sub    $0x804a028,%eax
 80483ea:	83 f8 06             	cmp    $0x6,%eax
 80483ed:	76 1a                	jbe    8048409 <deregister_tm_clones+0x29>
 80483ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80483f4:	85 c0                	test   %eax,%eax
 80483f6:	74 11                	je     8048409 <deregister_tm_clones+0x29>
 80483f8:	55                   	push   %ebp
 80483f9:	89 e5                	mov    %esp,%ebp
 80483fb:	83 ec 14             	sub    $0x14,%esp
 80483fe:	68 28 a0 04 08       	push   $0x804a028
 8048403:	ff d0                	call   *%eax
 8048405:	83 c4 10             	add    $0x10,%esp
 8048408:	c9                   	leave  
 8048409:	f3 c3                	repz ret 
 804840b:	90                   	nop
 804840c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048410 <register_tm_clones>:
 8048410:	b8 28 a0 04 08       	mov    $0x804a028,%eax
 8048415:	2d 28 a0 04 08       	sub    $0x804a028,%eax
 804841a:	c1 f8 02             	sar    $0x2,%eax
 804841d:	89 c2                	mov    %eax,%edx
 804841f:	c1 ea 1f             	shr    $0x1f,%edx
 8048422:	01 d0                	add    %edx,%eax
 8048424:	d1 f8                	sar    %eax
 8048426:	74 1b                	je     8048443 <register_tm_clones+0x33>
 8048428:	ba 00 00 00 00       	mov    $0x0,%edx
 804842d:	85 d2                	test   %edx,%edx
 804842f:	74 12                	je     8048443 <register_tm_clones+0x33>
 8048431:	55                   	push   %ebp
 8048432:	89 e5                	mov    %esp,%ebp
 8048434:	83 ec 10             	sub    $0x10,%esp
 8048437:	50                   	push   %eax
 8048438:	68 28 a0 04 08       	push   $0x804a028
 804843d:	ff d2                	call   *%edx
 804843f:	83 c4 10             	add    $0x10,%esp
 8048442:	c9                   	leave  
 8048443:	f3 c3                	repz ret 
 8048445:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048449:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048450 <__do_global_dtors_aux>:
 8048450:	80 3d 28 a0 04 08 00 	cmpb   $0x0,0x804a028
 8048457:	75 13                	jne    804846c <__do_global_dtors_aux+0x1c>
 8048459:	55                   	push   %ebp
 804845a:	89 e5                	mov    %esp,%ebp
 804845c:	83 ec 08             	sub    $0x8,%esp
 804845f:	e8 7c ff ff ff       	call   80483e0 <deregister_tm_clones>
 8048464:	c6 05 28 a0 04 08 01 	movb   $0x1,0x804a028
 804846b:	c9                   	leave  
 804846c:	f3 c3                	repz ret 
 804846e:	66 90                	xchg   %ax,%ax

08048470 <frame_dummy>:
 8048470:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 8048475:	8b 10                	mov    (%eax),%edx
 8048477:	85 d2                	test   %edx,%edx
 8048479:	75 05                	jne    8048480 <frame_dummy+0x10>
 804847b:	eb 93                	jmp    8048410 <register_tm_clones>
 804847d:	8d 76 00             	lea    0x0(%esi),%esi
 8048480:	ba 00 00 00 00       	mov    $0x0,%edx
 8048485:	85 d2                	test   %edx,%edx
 8048487:	74 f2                	je     804847b <frame_dummy+0xb>
 8048489:	55                   	push   %ebp
 804848a:	89 e5                	mov    %esp,%ebp
 804848c:	83 ec 14             	sub    $0x14,%esp
 804848f:	50                   	push   %eax
 8048490:	ff d2                	call   *%edx
 8048492:	83 c4 10             	add    $0x10,%esp
 8048495:	c9                   	leave  
 8048496:	e9 75 ff ff ff       	jmp    8048410 <register_tm_clones>

0804849b <sum>:
 804849b:	55                   	push   %ebp
 804849c:	89 e5                	mov    %esp,%ebp
 804849e:	53                   	push   %ebx
 804849f:	83 ec 14             	sub    $0x14,%esp
 80484a2:	8b 45 08             	mov    0x8(%ebp),%eax
 80484a5:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80484a8:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80484ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80484b1:	0b 45 f0             	or     -0x10(%ebp),%eax
 80484b4:	85 c0                	test   %eax,%eax
 80484b6:	75 0c                	jne    80484c4 <sum+0x29>
 80484b8:	b8 00 00 00 00       	mov    $0x0,%eax
 80484bd:	ba 00 00 00 00       	mov    $0x0,%edx
 80484c2:	eb 27                	jmp    80484eb <sum+0x50>
 80484c4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80484c7:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80484ca:	83 c0 ff             	add    $0xffffffff,%eax
 80484cd:	83 d2 ff             	adc    $0xffffffff,%edx
 80484d0:	83 ec 08             	sub    $0x8,%esp
 80484d3:	52                   	push   %edx
 80484d4:	50                   	push   %eax
 80484d5:	e8 c1 ff ff ff       	call   804849b <sum>
 80484da:	83 c4 10             	add    $0x10,%esp
 80484dd:	89 c1                	mov    %eax,%ecx
 80484df:	89 d3                	mov    %edx,%ebx
 80484e1:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80484e4:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80484e7:	01 c8                	add    %ecx,%eax
 80484e9:	11 da                	adc    %ebx,%edx
 80484eb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80484ee:	c9                   	leave  
 80484ef:	c3                   	ret    

080484f0 <main>:
 80484f0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80484f4:	83 e4 f0             	and    $0xfffffff0,%esp
 80484f7:	ff 71 fc             	pushl  -0x4(%ecx)
 80484fa:	55                   	push   %ebp
 80484fb:	89 e5                	mov    %esp,%ebp
 80484fd:	51                   	push   %ecx
 80484fe:	83 ec 14             	sub    $0x14,%esp
 8048501:	89 c8                	mov    %ecx,%eax
 8048503:	83 38 01             	cmpl   $0x1,(%eax)
 8048506:	7f 1a                	jg     8048522 <main+0x32>
 8048508:	83 ec 0c             	sub    $0xc,%esp
 804850b:	68 00 86 04 08       	push   $0x8048600
 8048510:	e8 3b fe ff ff       	call   8048350 <puts@plt>
 8048515:	83 c4 10             	add    $0x10,%esp
 8048518:	83 ec 0c             	sub    $0xc,%esp
 804851b:	6a 00                	push   $0x0
 804851d:	e8 3e fe ff ff       	call   8048360 <exit@plt>
 8048522:	8b 40 04             	mov    0x4(%eax),%eax
 8048525:	83 c0 04             	add    $0x4,%eax
 8048528:	8b 00                	mov    (%eax),%eax
 804852a:	83 ec 0c             	sub    $0xc,%esp
 804852d:	50                   	push   %eax
 804852e:	e8 4d fe ff ff       	call   8048380 <atoi@plt>
 8048533:	83 c4 10             	add    $0x10,%esp
 8048536:	99                   	cltd   
 8048537:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804853a:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804853d:	83 ec 08             	sub    $0x8,%esp
 8048540:	ff 75 f4             	pushl  -0xc(%ebp)
 8048543:	ff 75 f0             	pushl  -0x10(%ebp)
 8048546:	e8 50 ff ff ff       	call   804849b <sum>
 804854b:	83 c4 10             	add    $0x10,%esp
 804854e:	83 ec 0c             	sub    $0xc,%esp
 8048551:	52                   	push   %edx
 8048552:	50                   	push   %eax
 8048553:	ff 75 f4             	pushl  -0xc(%ebp)
 8048556:	ff 75 f0             	pushl  -0x10(%ebp)
 8048559:	68 18 86 04 08       	push   $0x8048618
 804855e:	e8 dd fd ff ff       	call   8048340 <printf@plt>
 8048563:	83 c4 20             	add    $0x20,%esp
 8048566:	b8 00 00 00 00       	mov    $0x0,%eax
 804856b:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804856e:	c9                   	leave  
 804856f:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048572:	c3                   	ret    
 8048573:	66 90                	xchg   %ax,%ax
 8048575:	66 90                	xchg   %ax,%ax
 8048577:	66 90                	xchg   %ax,%ax
 8048579:	66 90                	xchg   %ax,%ax
 804857b:	66 90                	xchg   %ax,%ax
 804857d:	66 90                	xchg   %ax,%ax
 804857f:	90                   	nop

08048580 <__libc_csu_init>:
 8048580:	55                   	push   %ebp
 8048581:	57                   	push   %edi
 8048582:	56                   	push   %esi
 8048583:	53                   	push   %ebx
 8048584:	e8 47 fe ff ff       	call   80483d0 <__x86.get_pc_thunk.bx>
 8048589:	81 c3 77 1a 00 00    	add    $0x1a77,%ebx
 804858f:	83 ec 0c             	sub    $0xc,%esp
 8048592:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048596:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804859c:	e8 67 fd ff ff       	call   8048308 <_init>
 80485a1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80485a7:	29 c6                	sub    %eax,%esi
 80485a9:	c1 fe 02             	sar    $0x2,%esi
 80485ac:	85 f6                	test   %esi,%esi
 80485ae:	74 25                	je     80485d5 <__libc_csu_init+0x55>
 80485b0:	31 ff                	xor    %edi,%edi
 80485b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485b8:	83 ec 04             	sub    $0x4,%esp
 80485bb:	ff 74 24 2c          	pushl  0x2c(%esp)
 80485bf:	ff 74 24 2c          	pushl  0x2c(%esp)
 80485c3:	55                   	push   %ebp
 80485c4:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80485cb:	83 c7 01             	add    $0x1,%edi
 80485ce:	83 c4 10             	add    $0x10,%esp
 80485d1:	39 f7                	cmp    %esi,%edi
 80485d3:	75 e3                	jne    80485b8 <__libc_csu_init+0x38>
 80485d5:	83 c4 0c             	add    $0xc,%esp
 80485d8:	5b                   	pop    %ebx
 80485d9:	5e                   	pop    %esi
 80485da:	5f                   	pop    %edi
 80485db:	5d                   	pop    %ebp
 80485dc:	c3                   	ret    
 80485dd:	8d 76 00             	lea    0x0(%esi),%esi

080485e0 <__libc_csu_fini>:
 80485e0:	f3 c3                	repz ret 

Disassembly of section .fini:

080485e4 <_fini>:
 80485e4:	53                   	push   %ebx
 80485e5:	83 ec 08             	sub    $0x8,%esp
 80485e8:	e8 e3 fd ff ff       	call   80483d0 <__x86.get_pc_thunk.bx>
 80485ed:	81 c3 13 1a 00 00    	add    $0x1a13,%ebx
 80485f3:	83 c4 08             	add    $0x8,%esp
 80485f6:	5b                   	pop    %ebx
 80485f7:	c3                   	ret    
